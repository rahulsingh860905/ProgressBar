!function(s){"use strict";var e='<div class="pb-baseDiv pb-col"><div class="pb-bg"><div style="width:{{bar.progress}}px;" class="pb-progressBar {{progressBarStyle}}"/><div class="pb-textDiv"><text class="pb-text pb-textSize">{{label}}%</text></div></div></div>',t=Ractive.extend({template:e,oninit:function(){this.normalProgressBarStyle="pb-progressBarNormal",this.overflowProgressBarStyle="pb-progressBarOverFlow",this.max=this.get("max"),this.min=0},oncomplete:function(){this.comp=this.find(".pb-baseDiv"),this.progress=this.usage=this.scale(this.get("bar.progress")),this.set("progressBarStyle",this.normalProgressBarStyle),this.tween(this.progress),this.set("label",this.getUsagePercentage(this.progress))},onrender:function(){var e,t=this;s.addEventListener("resize",e=function(){t.usage=t.scale(t.usagePercentage),t.usage<=t.scale(t.max)?t.progress=t.usage:t.progress=t.scale(t.max),t.set("bar.progress",t.progress)},!1),this.on("teardown",function(){s.removeEventListener("resize",e)},!1)},increase:function(s){this.usage=this.usage+this.scale(s),this.usage<=this.scale(this.max)?(this.progress=this.usage,this.tween(this.progress)):(this.progress=this.scale(this.max),this.set("progressBarStyle",this.overflowProgressBarStyle),this.tween(this.progress)),this.set("label",this.getUsagePercentage(this.usage))},decrease:function(s){this.usage=0!==this.usage?this.usage-this.scale(s):this.min,this.usage<this.min&&this.progress!=this.min?(this.progress=this.usage=this.min,this.tween(this.progress)):this.usage>=this.min&&this.usage<=this.scale(this.max)&&(this.progress=this.usage,this.set("progressBarStyle",this.normalProgressBarStyle),this.tween(this.progress)),this.set("label",this.getUsagePercentage(this.usage))},scale:function(s){return this.comp.clientWidth/this.max*s},getUsagePercentage:function(s){return this.usagePercentage=Math.round(s/this.comp.clientWidth*this.max),this.usagePercentage},tween:function(s){this.animate("bar.progress",s,{duration:50})},reset:function(){this.progress=this.usage=0,this.set("progressBarStyle",this.normalProgressBarStyle),this.tween(this.progress),this.set("label",this.getUsagePercentage(this.progress))}}),r=function(s){return{progress:s}},i=function(s,e){return{max:s,bar:new r(e)}};Ractive.components.ProgressBar=t,s.BarVO=r,s.ProgressBarVO=i,s.ProgressBar=t}(window);
!function(e){"use strict";var s='<div class="pbd-compContainer">{{#each bars:i}}<progressBarComp max={{max}} bar="{{bars[i]}}"/><br>{{/each}}<div class="controls"><select class="selct" value="{{selectedIndex}}">{{#each bars:i}}<option value="{{i}}">Progress Bar {{i+1}}</option>{{/each}}</select><button class="btn" type="button" on-click="callDecrease:25">-25</button><button class="btn" type="button" on-click="callDecrease:10">-10</button><button class="btn" type="button" on-click="callIncrease:10">+10</button><button class="btn" type="button" on-click="callIncrease:25">+25</button></div></div>',t=Ractive.extend({template:s,components:{progressBarComp:ProgressBar},oninit:function(){this.selectedProgressBar=this.findAllComponents()[0],this.addEventListeners()},addEventListeners:function(){this.on({callIncrease:function(e,s){this.selectedProgressBar.increase(s)},callDecrease:function(e,s){this.selectedProgressBar.decrease(s)}}),this.observe("selectedIndex",function(e){this.selectedProgressBar=this.findAllComponents()[e]})}}),n=function(e,s){return{max:e,bars:s}};Ractive.components.ProgressBarDemo=t,e.ProgressBarDemo=t,e.ProgressBarDemoVO=n}(window);